#
# This is configuration file for Proximity Server C# implementation.
#
# Empty lines and lines with first non-space character '#' are skipped.
# All other lines are expected to be in form of name-value pairs separated by equal sign.
# Values may contain equal sign as only the first equal sign on the line is considered as a separator.
#
# Both names and values are trimmed before used, which means that line containing
#
# 'name=value'
#
# and 
#
# '  name =  value '
# 
# are equal.
#
#
# Names and values are case sensitive.
#



#
# test_mode is an internal settings that switches the server's test mode on and off. If it is on, the server 
# is allowed to violate protocol as some limitations are removed. This should always be off in the production network.
#
# Examples: 
#
# test_mode = on
# test_mode = off
#
test_mode = off


#
# external_server_address specifies an IP address on which the server will operate 
# from the point of view of its network peers will connect to. 
# This has to be publicly accessible IP address, i.e. it should not be a local network or localhost address.
#
# Examples:
#
# external_server_address = 198.51.100.53
# external_server_address = 2001:db8::1
#
external_server_address = 127.0.0.1


#
# bind_to_interface specifies an interface on which the TCP servers will listen on.
# This must be an existing interface on of the machine, or 0.0.0.0 to listen on any interface.
#
# Examples:
#
# bind_to_interface = 0.0.0.0
# bind_to_interface = 198.51.100.53
#
bind_to_interface = 0.0.0.0



#
# Server role interfaces. Each proximity server implements different roles.
# Some roles are provided over TLS, other are provided unencrypted.
# Each role can be served on different port, but compatible roles can be served 
# on a single port. Two roles are compatible if they are both served unencrypted 
# or both are served encrypted.
#

#
# Primary Interface server role is an unencrypted TCP service that serves
# as the primary contact point and where clients can learn about server roles 
# the proximity server is providing.
#
# Examples:
#
# primary_interface_port = 16997
#
primary_interface_port = 16997

# 
# Neighbors Interface server role is an encrypted TCP service 
# for communication with neighbor proximity servers.
#
# Examples:
#
# neighbor_interface_port = 16998
#
neighbor_interface_port = 16998


#
# Clients Interface server role is an encrypted TCP service
# for communication with end user clients of the proximity server.
#
# Examples:
#
# client_interface_port = 16998
#
client_interface_port = 16998



#
# db_file_name specifies a name of the file in which the database is stored. This file has to exist 
# and has to contain the correct version of the proximity server database. The proximity server process 
# must have read and write access rights to this file.
#
# Examples:
#
# db_file_name = ProximityServer.db
# db_file_name = C:\directory\ProximityServer.db
# db_file_name = /home/user/iop/ProximityServer.db
#
db_file_name = ProximityServer.db


#
# tls_server_certificate specifies a file which contains a self-signed PFX (PKCS#12) certificate
# that is used on encrypted TCP services. 
#
# The file must not be password protected.
#
# To generate PFX certificate, you can use OpenSSL:
#
#   openssl req -x509 -newkey rsa:4096 -keyout ProximityServer.key -out ProximityServer.cer -days 365000
#   openssl pkcs12 -export -out ProximityServer.pfx -inkey ProximityServer.key -in ProximityServer.cer
#
#
# Examples:
#
# tls_server_certificate = ProximityServer.pfx
# tls_server_certificate = C:\directory\ProximityServer.pfx
# tls_server_certificate = /directory/ProximityServer.pfx
#
tls_server_certificate = ProximityServer.pfx



#
# max_activities sets a limit on the total number of primary activities which the proximity server can 
# manage. Due to protocol limitations, this number must not be greater than 50,000. 
#
# Note that the proximity servers share their activity databases with their neighbors and this setting
# does not affect the number of activities that the proximity server can receive from other servers. 
#
# Examples:
#
# max_activities = 50000
#
max_activities = 50000


#
# neighborhood_initialization_parallelism is maximal number of parallel neighborhood initialization processes
# that can occur. If a new neighborhood initialization request is received when the limit is reached, 
# the proximity server will not accept it and the requestor will have to try later. A neighborhood initialization 
# process is a resource heavy operation and a single initialization process can consume up to 10 MB of RAM.
#
# Examples: 
#
# neighborhood_initialization_parallelism = 10
#
neighborhood_initialization_parallelism = 10


# 
# loc_port specifies the TCP port, on which the proximity server will expect Location Based Network (LOC) 
# server to be operating on the localhost interface. The proximity server connects to LOC port during its 
# initialization.
# 
# Examples:
# 
# loc_port = 16982
# 
loc_port = 16982


#
# neighbor_expiration_time is a time in seconds between the last contact from a neighbor server up to the point 
# when the proximity server considers the neighbor as dead and deletes all information about it from its database. 
#
# Examples: 
#
# neighbor_expiration_time = 86400
#
neighbor_expiration_time = 86400


#
# max_neighborhood_size is a maximum number of neighbors that the proximity server will accept in its neighborhood.
# This number has to include a possible buffer for situations in which new servers appear in the neighborhood 
# and are accepted to the neighborhood over the intended limit, which is later restored by refusal to prolongate 
# the neighborhood relationship with some other servers. For an intended limit of 100 neighbors, we set this value 
# to 110, which gives us 10 % overfull buffer. This value must be at least 105.
#
# Examples: 
#
# max_neighborhood_size = 110
#
max_neighborhood_size = 110


#
# max_follower_servers_count is a maximum number of follower servers that the proximity server is willing to share 
# its own activity database with. This number has to be greater than or equal to max_neighborhood_size.
#
# Examples: 
#
# max_follower_servers_count = 200
#
max_follower_servers_count = 200


#
# follower_refresh_time is a time in seconds between the last refresh sent to a follower server that 
# the proximity server shares its activity database with. The refresh is sent in order for the follower server 
# not to delete information about it from its database. The minimal time after which the follower server is allowed 
# to delete the information is 24 hours (i.e. 86400 seconds), hence follower_refresh_time value must be less than 
# 24 hours and it is recommended that there is a significant time reserve to prevent accidental removal of 
# information about active servers.
#
# Examples: 
#
# follower_refresh_time = 43200
#
follower_refresh_time = 43200


# 
# can_api_port specifies the TCP port, on which the proximity server will expect Content Address Network (CAN) 
# server to be operating on the localhost interface. The proximity server connects to CAN port during its 
# initialization and then every time it needs to upload a new object to CAN.
# 
# Examples:
# 
# can_api_port = 15001
# 
can_api_port = 15001
